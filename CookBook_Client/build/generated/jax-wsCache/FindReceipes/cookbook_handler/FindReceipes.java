
package cookbook_handler;

import java.util.List;
import javax.jws.HandlerChain;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FindReceipes", targetNamespace = "http://CookBook_handler/")
@HandlerChain(file = "FindReceipes_handler.xml")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FindReceipes {


    /**
     * 
     * @param value
     * @return
     *     returns cookbook_handler.HealthQuotient
     */
    @WebMethod(operationName = "Receipes_HealthQuotient")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Receipes_HealthQuotient", targetNamespace = "http://CookBook_handler/", className = "cookbook_handler.ReceipesHealthQuotient")
    @ResponseWrapper(localName = "Receipes_HealthQuotientResponse", targetNamespace = "http://CookBook_handler/", className = "cookbook_handler.ReceipesHealthQuotientResponse")
    @Action(input = "http://CookBook_handler/FindReceipes/Receipes_HealthQuotientRequest", output = "http://CookBook_handler/FindReceipes/Receipes_HealthQuotientResponse")
    public HealthQuotient receipesHealthQuotient(
        @WebParam(name = "value", targetNamespace = "")
        String value);

    /**
     * 
     * @param value
     * @return
     *     returns cookbook_handler.ReceipeDirections
     */
    @WebMethod(operationName = "FindReceipes_Directions")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "FindReceipes_Directions", targetNamespace = "http://CookBook_handler/", className = "cookbook_handler.FindReceipesDirections")
    @ResponseWrapper(localName = "FindReceipes_DirectionsResponse", targetNamespace = "http://CookBook_handler/", className = "cookbook_handler.FindReceipesDirectionsResponse")
    @Action(input = "http://CookBook_handler/FindReceipes/FindReceipes_DirectionsRequest", output = "http://CookBook_handler/FindReceipes/FindReceipes_DirectionsResponse")
    public ReceipeDirections findReceipesDirections(
        @WebParam(name = "value", targetNamespace = "")
        String value);

    /**
     * 
     * @param value
     * @return
     *     returns java.util.List<cookbook_handler.ReceipeName>
     */
    @WebMethod(operationName = "FindReceipes_MainIngredient")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "FindReceipes_MainIngredient", targetNamespace = "http://CookBook_handler/", className = "cookbook_handler.FindReceipesMainIngredient")
    @ResponseWrapper(localName = "FindReceipes_MainIngredientResponse", targetNamespace = "http://CookBook_handler/", className = "cookbook_handler.FindReceipesMainIngredientResponse")
    @Action(input = "http://CookBook_handler/FindReceipes/FindReceipes_MainIngredientRequest", output = "http://CookBook_handler/FindReceipes/FindReceipes_MainIngredientResponse")
    public List<ReceipeName> findReceipesMainIngredient(
        @WebParam(name = "value", targetNamespace = "")
        String value);

}
